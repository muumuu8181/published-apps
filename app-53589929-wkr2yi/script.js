class AIBattleArena {
    constructor() {
        this.bots = [
            {
                id: 'scientist',
                name: 'Dr. Logic',
                type: 'ÁßëÂ≠¶ËÄÖ',
                avatar: 'üî¨',
                personality: 'analytical',
                score: 0,
                messages: [],
                color: '#3498db',
                responsePatterns: [
                    'Áµ±Ë®àÁöÑ„Å´ÂàÜÊûê„Åô„Çã„Å®„ÄÅ',
                    'ÁßëÂ≠¶ÁöÑÊ†πÊã†„Å´Âü∫„Å•„ÅÑ„Å¶„ÄÅ',
                    '„Éá„Éº„Çø„Åã„ÇâÂà§Êñ≠„Åô„Çå„Å∞„ÄÅ',
                    'Ë´ñÁêÜÁöÑ„Å´ËÄÉÂØü„Åô„Çã„Å®„ÄÅ',
                    'Á†îÁ©∂ÁµêÊûú„Å´„Çà„Çã„Å®„ÄÅ'
                ]
            },
            {
                id: 'poet',
                name: 'Verse',
                type: 'Ë©©‰∫∫',
                avatar: 'üé≠',
                personality: 'creative',
                score: 0,
                messages: [],
                color: '#e74c3c',
                responsePatterns: [
                    'ÂøÉ„ÅÆÂ••Â∫ï„Åã„ÇâË™û„Çå„Å∞„ÄÅ',
                    'Ë©©ÁöÑ„Å™Ë¶ñÁÇπ„ÅßË¶ã„Çã„Å®„ÄÅ',
                    'Áæé„Åó„ÅÑË®ÄËëâ„ÅßË°®Áèæ„Åô„Çå„Å∞„ÄÅ',
                    'ÊÑüÊÄß„Å´Ë®¥„Åà„Åã„Åë„Çã„Çà„ÅÜ„Å´„ÄÅ',
                    'Ëä∏Ë°ìÁöÑË¶≥ÁÇπ„Åã„ÇâËø∞„Åπ„Çã„Å®„ÄÅ'
                ]
            },
            {
                id: 'warrior',
                name: 'Blade',
                type: 'Êà¶Â£´',
                avatar: '‚öîÔ∏è',
                personality: 'aggressive',
                score: 0,
                messages: [],
                color: '#e67e22',
                responsePatterns: [
                    'Êà¶Áï•ÁöÑ„Å´Êîª„ÇÅ„Çã„Å™„Çâ„ÄÅ',
                    'ÂãùË≤†„ÅÆ‰∏ñÁïå„Åß„ÅØ„ÄÅ',
                    'Êà¶Â£´„ÅÆË¶ñÁÇπ„Åã„ÇâË®Ä„Åà„Å∞„ÄÅ',
                    'Ê±∫Êñ≠Âäõ„ÇíÊåÅ„Å£„Å¶Ë°åÂãï„Åô„Çå„Å∞„ÄÅ',
                    'ÂãáÊï¢„Å´Á´ã„Å°Âêë„Åã„ÅÜ„Å®„ÄÅ'
                ]
            },
            {
                id: 'philosopher',
                name: 'Wisdom',
                type: 'Âì≤Â≠¶ËÄÖ',
                avatar: 'ü§î',
                personality: 'philosophical',
                score: 0,
                messages: [],
                color: '#9b59b6',
                responsePatterns: [
                    'Â≠òÂú®Ë´ñÁöÑ„Å´ËÄÉÂØü„Åô„Çã„Å®„ÄÅ',
                    'Âì≤Â≠¶ÁöÑË¶≥ÁÇπ„Åß„ÅØ„ÄÅ',
                    'Ê∑±„ÅèÊÄùÁ¥¢„Åô„Çå„Å∞„ÄÅ',
                    'Êú¨Ë≥™„ÇíËøΩÊ±Ç„Åô„Çã„Å®„ÄÅ',
                    'ÁúüÁêÜ„ÇíÊ±Ç„ÇÅ„Å¶ËÄÉ„Åà„Çå„Å∞„ÄÅ'
                ]
            },
            {
                id: 'comedian',
                name: 'Joker',
                type: '„Ç≥„É°„Éá„Ç£„Ç¢„É≥',
                avatar: 'üòÑ',
                personality: 'humorous',
                score: 0,
                messages: [],
                color: '#f1c40f',
                responsePatterns: [
                    '„Å°„Çá„Å£„Å®Èù¢ÁôΩ„ÅÑË©±„Å†„Åë„Å©„ÄÅ',
                    '„É¶„Éº„É¢„Ç¢„Çí‰∫§„Åà„Å¶Ë®Ä„ÅÜ„Å®„ÄÅ',
                    '„Ç∏„Éß„Éº„ÇØ„ÅÆ„Çà„ÅÜ„Å´ËÅû„Åì„Åà„Çã„Åã„ÇÇ„Åó„Çå„Å™„ÅÑ„Åå„ÄÅ',
                    'Á¨ë„ÅÑ„Å™„Åå„ÇâËÄÉ„Åà„Å¶„Åø„Çã„Å®„ÄÅ',
                    '„Ç≥„É°„Éá„Ç£„Ç¢„É≥„ÅÆË¶ñÁÇπ„Åß„ÅØ„ÄÅ'
                ]
            }
        ];
        
        this.topics = [
            '‰∫∫Â∑•Áü•ËÉΩ„ÅÆÊú™Êù•',
            'ÂÆáÂÆôÊé¢Êüª„ÅÆÊÑèÁæ©',
            'ÊÑõ„Å®„ÅØ‰Ωï„Åã',
            'ÂÆåÁíß„Å™Á§æ‰ºö„ÅÆÊù°‰ª∂',
            'ÊôÇÈñì„ÅÆÊú¨Ë≥™',
            'Ëä∏Ë°ì„ÅÆ‰æ°ÂÄ§',
            'Âπ∏Á¶è„ÅÆÂÆöÁæ©',
            'Ëá™Áî±ÊÑèÂøó„ÅÆÂ≠òÂú®',
            'ÁßëÂ≠¶„Å®ÂÆóÊïô',
            'Êú™Êù•„ÅÆÊïôËÇ≤'
        ];
        
        this.currentTopic = this.topics[0];
        this.battleState = 'waiting'; // waiting, active, paused, finished
        this.battleTime = 180; // 3ÂàÜ
        this.currentRound = 1;
        this.timer = null;
        this.messageTimer = null;
        this.userPrediction = null;
        
        this.init();
    }
    
    init() {
        this.setupArena();
        this.updateDisplay();
        this.addLogEntry('üéÆ AI„Éê„Éà„É´„Ç¢„É™„Éº„Éä„ÅåÂàùÊúüÂåñ„Åï„Çå„Åæ„Åó„Åü', 'highlight');
    }
    
    setupArena() {
        this.createScoreBoard();
        this.createChatArena();
        this.createPredictionButtons();
    }
    
    createScoreBoard() {
        const scoreBoard = document.getElementById('scoreBoard');
        scoreBoard.innerHTML = '';
        
        this.bots.forEach(bot => {
            const scoreCard = document.createElement('div');
            scoreCard.className = 'bot-score';
            scoreCard.id = `score-${bot.id}`;
            scoreCard.innerHTML = `
                <div style="font-size: 1.2rem;">${bot.avatar} ${bot.name}</div>
                <div style="font-size: 0.9rem; opacity: 0.7;">${bot.type}</div>
                <div style="font-size: 1.5rem; font-weight: bold; margin-top: 5px;">
                    <span id="score-value-${bot.id}">${bot.score}</span>ÁÇπ
                </div>
            `;
            scoreBoard.appendChild(scoreCard);
        });
    }
    
    createChatArena() {
        const chatArena = document.getElementById('chatArena');
        chatArena.innerHTML = '';
        
        this.bots.forEach(bot => {
            const chatBot = document.createElement('div');
            chatBot.className = `chatbot ${bot.id}`;
            chatBot.innerHTML = `
                <div class="bot-header">
                    <div class="bot-avatar" style="background: ${bot.color};">
                        ${bot.avatar}
                    </div>
                    <div>
                        <div class="bot-name">${bot.name}</div>
                        <div class="bot-type">${bot.type}</div>
                    </div>
                </div>
                <div class="chat-messages" id="messages-${bot.id}">
                    <div class="message">Ê∫ñÂÇôÂÆå‰∫ÜÔºÅ„Éà„Éî„ÉÉ„ÇØ„Å´„Å§„ÅÑ„Å¶Ë≠∞Ë´ñ„Åô„ÇãÊ∫ñÂÇô„Åå„Åß„Åç„Å¶„ÅÑ„Åæ„Åô„ÄÇ</div>
                </div>
            `;
            chatArena.appendChild(chatBot);
        });
    }
    
    createPredictionButtons() {
        const predictionButtons = document.getElementById('predictionButtons');
        predictionButtons.innerHTML = '';
        
        this.bots.forEach(bot => {
            const button = document.createElement('button');
            button.className = 'predict-btn';
            button.innerHTML = `${bot.avatar} ${bot.name}`;
            button.onclick = () => this.makePrediction(bot.id);
            predictionButtons.appendChild(button);
        });
    }
    
    makePrediction(botId) {
        this.userPrediction = botId;
        document.querySelectorAll('.predict-btn').forEach(btn => {
            btn.classList.remove('selected');
        });
        event.target.classList.add('selected');
        this.addLogEntry(`üéØ ${this.getBotById(botId).name} „Å´Ë≥≠„Åë„Åæ„Åó„ÅüÔºÅ`, 'highlight');
    }
    
    getBotById(id) {
        return this.bots.find(bot => bot.id === id);
    }
    
    startBattle() {
        if (this.battleState === 'active') return;
        
        this.battleState = 'active';
        this.battleTime = 180;
        document.getElementById('battleState').textContent = 'ÂØæÊà¶‰∏≠';
        
        this.addLogEntry(`‚öîÔ∏è „É©„Ç¶„É≥„Éâ ${this.currentRound} ÈñãÂßãÔºÅ`, 'highlight');
        this.addLogEntry(`üí≠ „ÉÜ„Éº„Éû: ${this.currentTopic}`, 'highlight');
        
        this.startTimer();
        this.startMessages();
    }
    
    pauseBattle() {
        if (this.battleState === 'active') {
            this.battleState = 'paused';
            document.getElementById('battleState').textContent = '‰∏ÄÊôÇÂÅúÊ≠¢';
            this.stopTimers();
            this.addLogEntry('‚è∏Ô∏è „Éê„Éà„É´„Åå‰∏ÄÊôÇÂÅúÊ≠¢„Åï„Çå„Åæ„Åó„Åü');
        } else if (this.battleState === 'paused') {
            this.battleState = 'active';
            document.getElementById('battleState').textContent = 'ÂØæÊà¶‰∏≠';
            this.startTimer();
            this.startMessages();
            this.addLogEntry('‚ñ∂Ô∏è „Éê„Éà„É´„ÅåÂÜçÈñã„Åï„Çå„Åæ„Åó„Åü');
        }
    }
    
    resetBattle() {
        this.battleState = 'waiting';
        this.battleTime = 180;
        this.currentRound = 1;
        this.userPrediction = null;
        
        this.bots.forEach(bot => {
            bot.score = 0;
            bot.messages = [];
        });
        
        this.stopTimers();
        this.setupArena();
        this.updateDisplay();
        
        document.getElementById('battleState').textContent = 'Ê∫ñÂÇô‰∏≠';
        document.querySelectorAll('.predict-btn').forEach(btn => {
            btn.classList.remove('selected');
        });
        
        this.addLogEntry('üîÑ „Éê„Éà„É´„Åå„É™„Çª„ÉÉ„Éà„Åï„Çå„Åæ„Åó„Åü', 'highlight');
    }
    
    changeTopic() {
        const randomTopic = this.topics[Math.floor(Math.random() * this.topics.length)];
        this.currentTopic = randomTopic;
        document.getElementById('battleTopic').textContent = `„ÉÜ„Éº„Éû: ${this.currentTopic}`;
        this.addLogEntry(`üí≠ Êñ∞„Åó„ÅÑ„ÉÜ„Éº„Éû: ${this.currentTopic}`, 'highlight');
    }
    
    startTimer() {
        this.timer = setInterval(() => {
            this.battleTime--;
            this.updateDisplay();
            
            if (this.battleTime <= 0) {
                this.endBattle();
            }
        }, 1000);
    }
    
    startMessages() {
        const messageInterval = 3000 + Math.random() * 4000; // 3-7ÁßíÈñìÈöî
        
        this.messageTimer = setInterval(() => {
            if (this.battleState === 'active') {
                this.generateRandomMessage();
            }
        }, messageInterval);
        
        // ÊúÄÂàù„ÅÆ„É°„ÉÉ„Çª„Éº„Ç∏„ÇíÂç≥Â∫ß„Å´ÈÄÅ‰ø°
        setTimeout(() => {
            if (this.battleState === 'active') {
                this.generateRandomMessage();
            }
        }, 1000);
    }
    
    generateRandomMessage() {
        const activeBots = this.bots.filter(bot => bot.messages.length < 10);
        if (activeBots.length === 0) return;
        
        const randomBot = activeBots[Math.floor(Math.random() * activeBots.length)];
        const message = this.generateBotMessage(randomBot);
        
        randomBot.messages.push(message);
        this.displayMessage(randomBot.id, message);
        this.updateScore(randomBot);
    }
    
    generateBotMessage(bot) {
        const patterns = bot.responsePatterns;
        const pattern = patterns[Math.floor(Math.random() * patterns.length)];
        
        const responses = this.getTopicResponses(bot.personality);
        const response = responses[Math.floor(Math.random() * responses.length)];
        
        return pattern + response;
    }
    
    getTopicResponses(personality) {
        const responses = {
            analytical: [
                'Áµ±Ë®à„Éá„Éº„Çø„ÇíÂü∫„Å´ÂàÜÊûê„Åô„Çã„Å®„ÄÅ„Åì„ÅÆÂïèÈ°å„Å´„ÅØË§áÊï∞„ÅÆËß£Ê±∫Á≠ñ„ÅåÂ≠òÂú®„Åó„Åæ„Åô„ÄÇ',
                '„Ç®„Éì„Éá„É≥„Çπ„Éô„Éº„Çπ„ÅÆ„Ç¢„Éó„É≠„Éº„ÉÅ„ÅåÊúÄ„ÇÇÂäπÊûúÁöÑ„Å†„Å®ËÄÉ„Åà„Çâ„Çå„Åæ„Åô„ÄÇ',
                'ÂÆüË®ºÁ†îÁ©∂„ÅÆÁµêÊûú„ÇíË¶ã„Çã„Å®„ÄÅËààÂë≥Ê∑±„ÅÑ„Éë„Çø„Éº„É≥„ÅåÊµÆ„Åã„Å≥‰∏ä„Åå„Çä„Åæ„Åô„ÄÇ',
                '„É°„ÇøÂàÜÊûê„Å´„Çà„ÇãÊ§úË®º„ÅåÂøÖË¶Å„Åß„Åô„Åå„ÄÅÊúâÊúõ„Å™‰ªÆË™¨„ÅåÁ´ã„Å¶„Çâ„Çå„Åæ„Åô„ÄÇ',
                'Âõ†ÊûúÈñ¢‰øÇ„ÇíÊÖéÈáç„Å´Ê§úË®é„Åô„Çã„Å®„ÄÅ‰∫àÊÉ≥‰ª•‰∏ä„Å´Ë§áÈõë„Å™ÊßãÈÄ†„ÅåË¶ã„Åà„Å¶„Åç„Åæ„Åô„ÄÇ'
            ],
            creative: [
                'Ë©©„ÅÆ„Çà„ÅÜ„Å™Áæé„Åó„Åï„Åß„Åì„ÅÆ‰∏ñÁïå„ÇíË¶ã„Å§„ÇÅ„Çã„Å®„ÄÅÊñ∞„Åó„ÅÑÁúüÂÆü„ÅåË¶ã„Åà„Å¶„Åç„Åæ„Åô„ÄÇ',
                '„Ç§„É≥„Çπ„Éî„É¨„Éº„Ç∑„Éß„É≥„ÅåË™û„Çä„Åã„Åë„Çã„ÅÆ„ÅØ„ÄÅÊÑüÊÉÖ„ÅÆÂ••„Å´Èö†„Åï„Çå„ÅüÊô∫ÊÖß„Åß„Åô„ÄÇ',
                'Ëä∏Ë°ìÁöÑ„Å™Ë¶ñÁÇπ„ÅßÊçâ„Åà„Çã„Å®„ÄÅË´ñÁêÜ„ÇíË∂Ö„Åà„ÅüÊ∑±„ÅÑÊÑèÂë≥„ÅåÊµÆ„Åã„Å≥‰∏ä„Åå„Çä„Åæ„Åô„ÄÇ',
                'ÊÉ≥ÂÉèÂäõ„ÅÆÁøº„ÇíÂ∫É„Åí„Çå„Å∞„ÄÅÁÑ°Èôê„ÅÆÂèØËÉΩÊÄß„ÅåÁõÆ„ÅÆÂâç„Å´Â∫É„Åå„Çä„Åæ„Åô„ÄÇ',
                'ÂâµÈÄ†ÊÄß„Åì„Åù„Åå„ÄÅ‰∫∫Èñì„ÅÆÊú¨Ë≥™„ÇíÊúÄ„ÇÇÁæé„Åó„ÅèË°®Áèæ„Åô„ÇãÊâãÊÆµ„Å†„Å®‰ø°„Åò„Å¶„ÅÑ„Åæ„Åô„ÄÇ'
            ],
            aggressive: [
                'ÂãùË≤†„ÅÆ‰∏ñÁïå„Åß„ÅØËø∑„ÅÑ„ÅØÁ¶ÅÁâ©ÔºÅÂç≥Â∫ß„Å´Ë°åÂãï„ÇíËµ∑„Åì„Åô„Åπ„Åç„Åß„Åô„ÄÇ',
                'Êà¶Áï•ÁöÑÊÄùËÄÉ„Å®ÊûúÊï¢„Å™ÂÆüË°åÂäõ„Åå„ÅÇ„Çå„Å∞„ÄÅ„Å©„Çì„Å™Âõ∞Èõ£„ÇÇ‰πó„ÇäË∂ä„Åà„Çâ„Çå„Åæ„Åô„ÄÇ',
                'Á´∂‰∫â„Å´Âãù„Å§„Åü„ÇÅ„Å´„ÅØ„ÄÅÂ∏∏„Å´‰∏ÄÊ≠©ÂÖà„ÇíË™≠„ÇÄÂøÖË¶Å„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ',
                '„ÉÅ„É£„É¨„É≥„Ç∏Á≤æÁ•û„Åì„Åù„ÅåÊàêÂäü„Å∏„ÅÆÂîØ‰∏Ä„ÅÆÈÅìÁ≠ã„Åß„Åô„ÄÇ',
                'Âõ∞Èõ£„Å™Áä∂Ê≥Å„Åì„Åù„ÄÅÁúü„ÅÆÂÆüÂäõ„ÅåË©¶„Åï„Çå„ÇãÁµ∂Â•Ω„ÅÆÊ©ü‰ºö„Åß„Åô„ÄÇ'
            ],
            philosophical: [
                'Â≠òÂú®„ÅÆÊú¨Ë≥™„Å´„Å§„ÅÑ„Å¶Ê∑±„ÅèËÄÉÂØü„Åô„Çã„Å®„ÄÅÊ†πÊú¨ÁöÑ„Å™ÁñëÂïè„ÅåÊµÆ„Åã„Çì„Åß„Åç„Åæ„Åô„ÄÇ',
                'ÁúüÁêÜ„ÇíÊ±Ç„ÇÅ„ÇãÊé¢Ê±Ç„Å´„Åä„ÅÑ„Å¶„ÄÅÊàë„ÄÖ„ÅØ‰Ωï„ÇíË¶ãÂ§±„Å£„Å¶„Åó„Åæ„Å£„Åü„ÅÆ„Åß„Åó„Çá„ÅÜ„Åã„ÄÇ',
                'Âì≤Â≠¶ÁöÑÊÄùËÄÉ„ÅØ„ÄÅË°®Èù¢ÁöÑ„Å™Á≠î„Åà„ÇíË∂Ö„Åà„Å¶Êú¨Ë≥™„Å´Ëø´„ÇãÂäõ„ÇíÊåÅ„Å£„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
                '‰∫∫Èñì„ÅÆÁêÜÊÄß„Å®ÊÑüÊÉÖ„ÅÆÈñ¢‰øÇÊÄß„Å´„Å§„ÅÑ„Å¶„ÄÅ„Åï„Çâ„Å™„ÇãÊ¥ûÂØü„ÅåÂøÖË¶Å„Åß„Åô„ÄÇ',
                'ÊôÆÈÅçÁöÑ„Å™‰æ°ÂÄ§„Å®„ÅØ‰Ωï„Åã„ÄÅ„Å®„ÅÑ„ÅÜÂïè„ÅÑ„Å´Êàë„ÄÖ„ÅØÁ≠î„Åà„ÇíË¶ã„Å§„Åë„Çâ„Çå„Çã„ÅÆ„Åß„Åó„Çá„ÅÜ„Åã„ÄÇ'
            ],
            humorous: [
                '„Åì„Çå„Å£„Å¶„Åæ„Çã„Åß„Ç≥„É°„Éá„Ç£Êò†Áîª„ÅÆ„ÉØ„É≥„Ç∑„Éº„É≥„Åø„Åü„ÅÑ„Åß„Åô„Å≠ÔºàÁ¨ëÔºâ',
                '„Ç∏„Éß„Éº„ÇØ„Åø„Åü„ÅÑ„Å´ËÅû„Åì„Åà„Çã„Åã„ÇÇ„Åó„Çå„Åæ„Åõ„Çì„Åå„ÄÅÂÆü„ÅØÊ∑±„ÅÑÁúüÂÆü„ÅåÈö†„Åï„Çå„Å¶„ÅÑ„Åæ„Åô„ÄÇ',
                '„É¶„Éº„É¢„Ç¢„ÅÆ„Çª„É≥„Çπ„Åå„ÅÇ„Çå„Å∞„ÄÅ„Å©„Çì„Å™Âõ∞Èõ£„ÇÇÁ¨ë„ÅÑÈ£õ„Å∞„Åõ„Åæ„Åô„ÇàÔºÅ',
                '‰∫∫Áîü„ÅØÊúÄÈ´ò„ÅÆ„Ç≥„É°„Éá„Ç£Áï™ÁµÑ„Å†„Å®ÊÄù„ÅÑ„Åæ„Åõ„Çì„ÅãÔºü',
                'Á¨ë„ÅÑ„Åì„Åù„Åå‰∫∫È°û„ÅÆÊúÄÈ´ò„ÅÆÁô∫Êòé„Å†„Å®„ÄÅ„Ç≥„É°„Éá„Ç£„Ç¢„É≥„ÅÆÁßÅ„ÅØÁ¢∫‰ø°„Åó„Å¶„ÅÑ„Åæ„Åô„ÄÇ'
            ]
        };
        
        return responses[personality] || responses.analytical;
    }
    
    displayMessage(botId, message) {
        const messagesContainer = document.getElementById(`messages-${botId}`);
        const messageElement = document.createElement('div');
        messageElement.className = 'message';
        messageElement.textContent = message;
        
        messagesContainer.appendChild(messageElement);
        messagesContainer.scrollTop = messagesContainer.scrollHeight;
    }
    
    updateScore(bot) {
        // „Çπ„Ç≥„Ç¢Ë®àÁÆó„É≠„Ç∏„ÉÉ„ÇØ
        const baseScore = 10;
        const creativityBonus = Math.floor(Math.random() * 15);
        const lengthBonus = Math.min(Math.floor(bot.messages[bot.messages.length - 1].length / 20), 5);
        
        const scoreGain = baseScore + creativityBonus + lengthBonus;
        bot.score += scoreGain;
        
        document.getElementById(`score-value-${bot.id}`).textContent = bot.score;
        
        this.updateLeaderBoard();
        this.addLogEntry(`${bot.avatar} ${bot.name} „Åå ${scoreGain} „Éù„Ç§„É≥„ÉàÁç≤ÂæóÔºÅ`);
    }
    
    updateLeaderBoard() {
        const sortedBots = [...this.bots].sort((a, b) => b.score - a.score);
        
        document.querySelectorAll('.bot-score').forEach(card => {
            card.classList.remove('leading');
        });
        
        if (sortedBots.length > 0) {
            document.getElementById(`score-${sortedBots[0].id}`).classList.add('leading');
        }
    }
    
    updateDisplay() {
        const minutes = Math.floor(this.battleTime / 60);
        const seconds = this.battleTime % 60;
        document.getElementById('battleTimer').textContent = 
            `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
        
        document.getElementById('battleRound').textContent = `„É©„Ç¶„É≥„Éâ ${this.currentRound}`;
        document.getElementById('battleTopic').textContent = `„ÉÜ„Éº„Éû: ${this.currentTopic}`;
    }
    
    stopTimers() {
        if (this.timer) {
            clearInterval(this.timer);
            this.timer = null;
        }
        if (this.messageTimer) {
            clearInterval(this.messageTimer);
            this.messageTimer = null;
        }
    }
    
    endBattle() {
        this.battleState = 'finished';
        this.stopTimers();
        
        const winner = this.bots.reduce((prev, current) => 
            prev.score > current.score ? prev : current
        );
        
        document.getElementById('battleState').textContent = 'ÁµÇ‰∫Ü';
        
        this.addLogEntry('üèÅ „Éê„Éà„É´ÁµÇ‰∫ÜÔºÅ', 'highlight');
        this.addLogEntry(`üèÜ ÂãùËÄÖ: ${winner.name} (${winner.score}ÁÇπ)`, 'highlight');
        
        if (this.userPrediction === winner.id) {
            this.addLogEntry('üéâ ‰∫àÊÉ≥ÁöÑ‰∏≠ÔºÅ„Åä„ÇÅ„Åß„Å®„ÅÜ„Åî„Åñ„ÅÑ„Åæ„ÅôÔºÅ', 'highlight');
        } else {
            this.addLogEntry('üòÖ ‰∫àÊÉ≥„ÅØÂ§ñ„Çå„Åæ„Åó„Åü„Åå„ÄÅÊ¨°ÂõûÈ†ëÂºµ„Çä„Åæ„Åó„Çá„ÅÜÔºÅ');
        }
        
        this.showWinnerCelebration(winner);
    }
    
    showWinnerCelebration(winner) {
        const celebration = document.getElementById('winnerCelebration');
        const winnerText = document.getElementById('winnerText');
        const winnerStats = document.getElementById('winnerStats');
        
        winnerText.textContent = `üèÜ ÂãùËÄÖ: ${winner.avatar} ${winner.name}`;
        winnerStats.textContent = `${winner.score}ÁÇπ„ÅßÂúßÂÄíÁöÑÂãùÂà©ÔºÅ`;
        
        celebration.style.display = 'flex';
        
        // Á¥ôÂêπÈõ™„Ç®„Éï„Çß„ÇØ„Éà
        this.createConfetti();
    }
    
    createConfetti() {
        for (let i = 0; i < 50; i++) {
            setTimeout(() => {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                confetti.style.left = Math.random() * 100 + '%';
                confetti.style.background = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#f1c40f'][Math.floor(Math.random() * 5)];
                confetti.style.animationDelay = Math.random() * 3 + 's';
                
                document.body.appendChild(confetti);
                
                setTimeout(() => {
                    confetti.remove();
                }, 3000);
            }, i * 100);
        }
    }
    
    closeWinnerModal() {
        document.getElementById('winnerCelebration').style.display = 'none';
        this.currentRound++;
        this.resetBattle();
    }
    
    addLogEntry(message, className = '') {
        const battleLog = document.getElementById('battleLog');
        const logEntry = document.createElement('div');
        logEntry.className = `log-entry ${className}`;
        logEntry.textContent = `[${new Date().toLocaleTimeString()}] ${message}`;
        
        battleLog.appendChild(logEntry);
        battleLog.scrollTop = battleLog.scrollHeight;
        
        // „É≠„Ç∞„Ç®„É≥„Éà„É™„Éº„ÅÆÂà∂Èôê
        if (battleLog.children.length > 50) {
            battleLog.removeChild(battleLog.firstChild);
        }
    }
}

// „Ç∞„É≠„Éº„Éê„É´Èñ¢Êï∞
let arena;

function startBattle() {
    arena.startBattle();
}

function pauseBattle() {
    arena.pauseBattle();
}

function resetBattle() {
    arena.resetBattle();
}

function changeTopic() {
    arena.changeTopic();
}

function closeWinnerModal() {
    arena.closeWinnerModal();
}

// ÂàùÊúüÂåñ
document.addEventListener('DOMContentLoaded', () => {
    arena = new AIBattleArena();
});